View(artwork)
setwd("D:\\2023\\SEM 2\\FIT3179\\A2\\DATASET")
View(artwork)
artwork = read.csv("artworks.csv", header = TRUE)
View(artwork)
cleaned = read.csv("cleaned.csv", header = T)
View(cleaned)
aa = cleaned$Department
aa
# Assuming 'aa' is a vector or column in your data frame
distinct_departments <- unique(aa)
# Print the distinct departments
print(distinct_departments)
column_names <- names(cleaned)
# Print the column names
print(column_names)
columns_to_drop <- c("Circumference..cm.", "Depth..cm.", "Diameter..cm.",
"Height..cm.", "Length..cm.", "Weight..kg.",
"Width..cm.", "Seat.Height..cm.", "Duration..sec..")
cleaned <- cleaned[, !(colnames(cleaned) %in% columns_to_drop)]
cleaned <- cleaned[complete.cases(cleaned$URL, cleaned$ThumbnailURL), ]
View(cleaned)
american_artworks <- cleaned %>%
filter(Country == "America")
library(dplyr)
american_artworks <- cleaned %>%
filter(Country == "America")
print(american_artworks)
print(count(american_artworks))
View(american_artworks)
american_artworks <- cleaned %>%
filter(Country == "United States of America")
View(american_artworks)
# Identify rows where Country is "United States of America"
rows_to_drop <- cleaned %>%
filter(Country == "United States of America") %>%
sample_n(50000)
# Drop the selected rows
cleaned <- anti_join(cleaned, rows_to_drop)
american_artworks <- cleaned %>%
filter(Country == "United States of America")
View(american_artworks)
View(rows_to_drop)
cleaned <- cleaned %>%
filter(!(Title == "Untitled"))
cleaned <- cleaned %>%
filter(!grepl("Untitled", Title, ignore.case = TRUE))
View(cleaned)
View(cleaned)
aggregated_data <- cleaned %>%
group_by(Country, Year) %>%
summarize(
Mean_Value = mean(Value),
Total_Count = n()
# Add more summary statistics as needed
)
aggregated_data <- cleaned %>%
group_by(Country, BeginDate) %>%
summarize(
Mean_Value = mean(Value),
Total_Count = n()
# Add more summary statistics as needed
)
aggregated_data <- cleaned %>%
group_by(Country, BeginDate) %>%
summarize(
Total_Count = n()
# Add more summary statistics as needed
)
View(aggregated_data)
View(aggregated_data)
aggregated_data <- cleaned %>%
group_by(Country, CLassification, Department) %>%
summarize(
Total_Count = n()
# Add more summary statistics as needed
)
aggregated_data <- cleaned %>%
group_by(Country, Classification, Department) %>%
summarize(
Total_Count = n()
# Add more summary statistics as needed
)
aggregated_data <- cleaned %>%
group_by(Country) %>%
summarize(
Total_Count = n()
# Add more summary statistics as needed
)
# Set the desired number of rows to keep (e.g., 10,000)
desired_rows <- 10000
# Randomly sample the specified number of rows
sampled_data <- cleaned %>%
sample_n(desired_rows)
View(sampled_data)
View(sampled_data)
cleaned <- cleaned %>%
filter(!is.na(Dimensions) & Dimensions != "")
cleaned <- cleaned %>%
filter(!is.na(Medium) & Medium != "")
cleaned <- cleaned %>%
filter(!is.na(Title) & Title != "")
# Randomly sample the specified number of rows
sampled_data <- cleaned %>%
sample_n(desired_rows)
View(sampled_data)
View(sampled_data)
cleaned <- cleaned %>%
filter(!is.na(URL) & URL != "" & !is.na(ThumbnailURL) & ThumbnailURL != "")
# Set the desired number of rows to keep (e.g., 10,000)
desired_rows <- 10000
# Randomly sample the specified number of rows
sampled_data <- cleaned %>%
sample_n(desired_rows)
cleaned <- cleaned %>%
filter(Catalogued != "N")
cleaned <- cleaned %>%
filter(Cataloged != "N")
# Randomly sample the specified number of rows
sampled_data <- cleaned %>%
sample_n(desired_rows)
aggregated_data <- sampled_data %>%
group_by(Country, Classification, Department) %>%
summarize(
Total_Count = n()
# Add more summary statistics as needed
)
aggregated_data <- sampled_data %>%
group_by(Country) %>%
summarize(
Total_Count = n()
# Add more summary statistics as needed
)
write.csv(sampled_data, file = 'sampled_data.csv', row.names = FALSE)
